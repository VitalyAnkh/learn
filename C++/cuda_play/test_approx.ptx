//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31294372
// Cuda compilation tools, release 11.7, V11.7.64
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_80
.address_size 64

	// .globl	_Z11test_approxf
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[9] = {100, 105, 118, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str$1[16] = {116, 97, 110, 95, 97, 112, 112, 114, 111, 120, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str$2[12] = {115, 113, 114, 116, 95, 100, 58, 32, 37, 102, 10, 0};

.visible .entry _Z11test_approxf(
	.param .f32 _Z11test_approxf_param_0
)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<9>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f32 	%f1, [_Z11test_approxf_param_0];
	add.u64 	%rd1, %SP, 0;
	add.u64 	%rd2, %SPL, 0;
	sqrt.approx.ftz.f32 	%f2, %f1;
	div.approx.ftz.f32 	%f3, %f1, %f2;
	sin.approx.ftz.f32 	%f4, %f1;
	cos.approx.ftz.f32 	%f5, %f1;
	div.approx.ftz.f32 	%f6, %f4, %f5;
	cvt.ftz.f64.f32 	%fd1, %f2;
	cvt.ftz.f64.f32 	%fd2, %f3;
	st.local.f64 	[%rd2], %fd2;
	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r1, [retval0+0];
	} // callseq 0
	cvt.ftz.f64.f32 	%fd3, %f6;
	st.local.f64 	[%rd2], %fd3;
	mov.u64 	%rd5, $str$1;
	cvta.global.u64 	%rd6, %rd5;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r2, [retval0+0];
	} // callseq 1
	st.local.f64 	[%rd2], %fd1;
	mov.u64 	%rd7, $str$2;
	cvta.global.u64 	%rd8, %rd7;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r3, [retval0+0];
	} // callseq 2
	ret;

}

