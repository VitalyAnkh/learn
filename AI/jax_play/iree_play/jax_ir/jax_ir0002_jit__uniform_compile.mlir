#loc1 = loc("key")
#loc2 = loc("minval")
#loc3 = loc("maxval")
#loc4 = loc("/home/vitalyr/projects/learn/AI/jax_play/iree_play/jax_matmul_mma.py":9:4)
#loc5 = loc("<module>"(#loc4))
#loc12 = loc("jit(_uniform)/jit(main)/threefry2x32"(#loc5))
module @jit__uniform attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<2xui32> loc("key"), %arg1: tensor<i32> loc("minval"), %arg2: tensor<i32> loc("maxval")) -> (tensor<4096x4096xf16> {jax.result_info = ""}) {
    %0 = stablehlo.custom_call @Sharding(%arg0) {backend_config = "", mhlo.sharding = "{replicated}"} : (tensor<2xui32>) -> tensor<2xui32> loc(#loc)
    %1 = stablehlo.convert %arg1 : (tensor<i32>) -> tensor<f16> loc(#loc6)
    %2 = stablehlo.convert %arg2 : (tensor<i32>) -> tensor<f16> loc(#loc6)
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f16>) -> tensor<1x1xf16> loc(#loc7)
    %4 = stablehlo.broadcast_in_dim %2, dims = [] : (tensor<f16>) -> tensor<1x1xf16> loc(#loc7)
    %5 = stablehlo.iota dim = 0 : tensor<8388608xui32> loc(#loc8)
    %6 = stablehlo.slice %0 [0:1] : (tensor<2xui32>) -> tensor<1xui32> loc(#loc9)
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32> loc(#loc10)
    %8 = stablehlo.slice %0 [1:2] : (tensor<2xui32>) -> tensor<1xui32> loc(#loc9)
    %9 = stablehlo.reshape %8 : (tensor<1xui32>) -> tensor<ui32> loc(#loc10)
    %10 = stablehlo.slice %5 [0:4194304] : (tensor<8388608xui32>) -> tensor<4194304xui32> loc(#loc11)
    %11 = stablehlo.slice %5 [4194304:8388608] : (tensor<8388608xui32>) -> tensor<4194304xui32> loc(#loc11)
    %12:2 = call @threefry2x32(%7, %9, %10, %11) : (tensor<ui32>, tensor<ui32>, tensor<4194304xui32>, tensor<4194304xui32>) -> (tensor<4194304xui32>, tensor<4194304xui32>) loc(#loc12)
    %13 = stablehlo.concatenate %12#0, %12#1, dim = 0 : (tensor<4194304xui32>, tensor<4194304xui32>) -> tensor<8388608xui32> loc(#loc13)
    %14 = stablehlo.broadcast_in_dim %13, dims = [1] : (tensor<8388608xui32>) -> tensor<1x8388608xui32> loc(#loc7)
    %15 = stablehlo.iota dim = 0 : tensor<2x1xui32> loc(#loc8)
    %c = stablehlo.constant dense<16> : tensor<ui32> loc(#loc14)
    %16 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui32>) -> tensor<2x1xui32> loc(#loc15)
    %17 = stablehlo.multiply %16, %15 : tensor<2x1xui32> loc(#loc15)
    %18 = stablehlo.broadcast_in_dim %14, dims = [0, 1] : (tensor<1x8388608xui32>) -> tensor<2x8388608xui32> loc(#loc16)
    %19 = stablehlo.broadcast_in_dim %17, dims = [0, 1] : (tensor<2x1xui32>) -> tensor<2x8388608xui32> loc(#loc16)
    %20 = stablehlo.shift_right_logical %18, %19 : tensor<2x8388608xui32> loc(#loc16)
    %c_0 = stablehlo.constant dense<65535> : tensor<ui32> loc(#loc14)
    %21 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<2x8388608xui32> loc(#loc17)
    %22 = stablehlo.and %21, %20 : tensor<2x8388608xui32> loc(#loc17)
    %23 = stablehlo.transpose %22, dims = [1, 0] : (tensor<2x8388608xui32>) -> tensor<8388608x2xui32> loc(#loc18)
    %24 = stablehlo.reshape %23 : (tensor<8388608x2xui32>) -> tensor<16777216xui32> loc(#loc18)
    %25 = stablehlo.convert %24 : (tensor<16777216xui32>) -> tensor<16777216xui16> loc(#loc6)
    %26 = stablehlo.reshape %25 : (tensor<16777216xui16>) -> tensor<4096x4096xui16> loc(#loc18)
    %c_1 = stablehlo.constant dense<6> : tensor<ui16> loc(#loc)
    %27 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui16>) -> tensor<4096x4096xui16> loc(#loc16)
    %28 = stablehlo.shift_right_logical %26, %27 : tensor<4096x4096xui16> loc(#loc16)
    %c_2 = stablehlo.constant dense<15360> : tensor<ui16> loc(#loc)
    %29 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui16>) -> tensor<4096x4096xui16> loc(#loc19)
    %30 = stablehlo.or %28, %29 : tensor<4096x4096xui16> loc(#loc19)
    %31 = stablehlo.bitcast_convert %30 : (tensor<4096x4096xui16>) -> tensor<4096x4096xf16> loc(#loc20)
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f16> loc(#loc)
    %32 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f16>) -> tensor<4096x4096xf16> loc(#loc21)
    %33 = stablehlo.subtract %31, %32 : tensor<4096x4096xf16> loc(#loc21)
    %34 = stablehlo.subtract %4, %3 : tensor<1x1xf16> loc(#loc21)
    %35 = stablehlo.broadcast_in_dim %34, dims = [0, 1] : (tensor<1x1xf16>) -> tensor<4096x4096xf16> loc(#loc15)
    %36 = stablehlo.multiply %33, %35 : tensor<4096x4096xf16> loc(#loc15)
    %37 = stablehlo.broadcast_in_dim %3, dims = [0, 1] : (tensor<1x1xf16>) -> tensor<4096x4096xf16> loc(#loc22)
    %38 = stablehlo.add %36, %37 : tensor<4096x4096xf16> loc(#loc22)
    %39 = stablehlo.broadcast_in_dim %3, dims = [0, 1] : (tensor<1x1xf16>) -> tensor<4096x4096xf16> loc(#loc23)
    %40 = stablehlo.maximum %39, %38 : tensor<4096x4096xf16> loc(#loc23)
    return %40 : tensor<4096x4096xf16> loc(#loc)
  } loc(#loc)
  func.func private @threefry2x32(%arg0: tensor<ui32> loc("jit(_uniform)/jit(main)/threefry2x32"(#loc5)), %arg1: tensor<ui32> loc("jit(_uniform)/jit(main)/threefry2x32"(#loc5)), %arg2: tensor<4194304xui32> loc("jit(_uniform)/jit(main)/threefry2x32"(#loc5)), %arg3: tensor<4194304xui32> loc("jit(_uniform)/jit(main)/threefry2x32"(#loc5))) -> (tensor<4194304xui32>, tensor<4194304xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32> loc(#loc24)
    %c = stablehlo.constant dense<466688986> : tensor<ui32> loc(#loc12)
    %1 = stablehlo.xor %0, %c : tensor<ui32> loc(#loc24)
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %3 = stablehlo.add %arg2, %2 : tensor<4194304xui32> loc(#loc22)
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %5 = stablehlo.add %arg3, %4 : tensor<4194304xui32> loc(#loc22)
    %6 = stablehlo.add %3, %5 : tensor<4194304xui32> loc(#loc22)
    %c_0 = stablehlo.constant dense<13> : tensor<ui32> loc(#loc12)
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %8 = stablehlo.shift_left %5, %7 : tensor<4194304xui32> loc(#loc25)
    %c_1 = stablehlo.constant dense<19> : tensor<ui32> loc(#loc12)
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<4194304xui32> loc(#loc16)
    %11 = stablehlo.or %8, %10 : tensor<4194304xui32> loc(#loc19)
    %12 = stablehlo.xor %6, %11 : tensor<4194304xui32> loc(#loc24)
    %13 = stablehlo.add %6, %12 : tensor<4194304xui32> loc(#loc22)
    %c_2 = stablehlo.constant dense<15> : tensor<ui32> loc(#loc12)
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %15 = stablehlo.shift_left %12, %14 : tensor<4194304xui32> loc(#loc25)
    %c_3 = stablehlo.constant dense<17> : tensor<ui32> loc(#loc12)
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<4194304xui32> loc(#loc16)
    %18 = stablehlo.or %15, %17 : tensor<4194304xui32> loc(#loc19)
    %19 = stablehlo.xor %13, %18 : tensor<4194304xui32> loc(#loc24)
    %20 = stablehlo.add %13, %19 : tensor<4194304xui32> loc(#loc22)
    %c_4 = stablehlo.constant dense<26> : tensor<ui32> loc(#loc12)
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %22 = stablehlo.shift_left %19, %21 : tensor<4194304xui32> loc(#loc25)
    %c_5 = stablehlo.constant dense<6> : tensor<ui32> loc(#loc12)
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<4194304xui32> loc(#loc16)
    %25 = stablehlo.or %22, %24 : tensor<4194304xui32> loc(#loc19)
    %26 = stablehlo.xor %20, %25 : tensor<4194304xui32> loc(#loc24)
    %27 = stablehlo.add %20, %26 : tensor<4194304xui32> loc(#loc22)
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %29 = stablehlo.shift_left %26, %28 : tensor<4194304xui32> loc(#loc25)
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<4194304xui32> loc(#loc16)
    %32 = stablehlo.or %29, %31 : tensor<4194304xui32> loc(#loc19)
    %33 = stablehlo.xor %27, %32 : tensor<4194304xui32> loc(#loc24)
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %35 = stablehlo.add %27, %34 : tensor<4194304xui32> loc(#loc22)
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %37 = stablehlo.add %33, %36 : tensor<4194304xui32> loc(#loc22)
    %c_6 = stablehlo.constant dense<1> : tensor<ui32> loc(#loc12)
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %39 = stablehlo.add %37, %38 : tensor<4194304xui32> loc(#loc22)
    %40 = stablehlo.add %35, %39 : tensor<4194304xui32> loc(#loc22)
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %42 = stablehlo.shift_left %39, %41 : tensor<4194304xui32> loc(#loc25)
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<4194304xui32> loc(#loc16)
    %45 = stablehlo.or %42, %44 : tensor<4194304xui32> loc(#loc19)
    %46 = stablehlo.xor %40, %45 : tensor<4194304xui32> loc(#loc24)
    %47 = stablehlo.add %40, %46 : tensor<4194304xui32> loc(#loc22)
    %c_7 = stablehlo.constant dense<29> : tensor<ui32> loc(#loc12)
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %49 = stablehlo.shift_left %46, %48 : tensor<4194304xui32> loc(#loc25)
    %c_8 = stablehlo.constant dense<3> : tensor<ui32> loc(#loc12)
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<4194304xui32> loc(#loc16)
    %52 = stablehlo.or %49, %51 : tensor<4194304xui32> loc(#loc19)
    %53 = stablehlo.xor %47, %52 : tensor<4194304xui32> loc(#loc24)
    %54 = stablehlo.add %47, %53 : tensor<4194304xui32> loc(#loc22)
    %c_9 = stablehlo.constant dense<16> : tensor<ui32> loc(#loc12)
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %56 = stablehlo.shift_left %53, %55 : tensor<4194304xui32> loc(#loc25)
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<4194304xui32> loc(#loc16)
    %59 = stablehlo.or %56, %58 : tensor<4194304xui32> loc(#loc19)
    %60 = stablehlo.xor %54, %59 : tensor<4194304xui32> loc(#loc24)
    %61 = stablehlo.add %54, %60 : tensor<4194304xui32> loc(#loc22)
    %c_10 = stablehlo.constant dense<24> : tensor<ui32> loc(#loc12)
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %63 = stablehlo.shift_left %60, %62 : tensor<4194304xui32> loc(#loc25)
    %c_11 = stablehlo.constant dense<8> : tensor<ui32> loc(#loc12)
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<4194304xui32> loc(#loc16)
    %66 = stablehlo.or %63, %65 : tensor<4194304xui32> loc(#loc19)
    %67 = stablehlo.xor %61, %66 : tensor<4194304xui32> loc(#loc24)
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %69 = stablehlo.add %61, %68 : tensor<4194304xui32> loc(#loc22)
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %71 = stablehlo.add %67, %70 : tensor<4194304xui32> loc(#loc22)
    %c_12 = stablehlo.constant dense<2> : tensor<ui32> loc(#loc12)
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %73 = stablehlo.add %71, %72 : tensor<4194304xui32> loc(#loc22)
    %74 = stablehlo.add %69, %73 : tensor<4194304xui32> loc(#loc22)
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %76 = stablehlo.shift_left %73, %75 : tensor<4194304xui32> loc(#loc25)
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<4194304xui32> loc(#loc16)
    %79 = stablehlo.or %76, %78 : tensor<4194304xui32> loc(#loc19)
    %80 = stablehlo.xor %74, %79 : tensor<4194304xui32> loc(#loc24)
    %81 = stablehlo.add %74, %80 : tensor<4194304xui32> loc(#loc22)
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %83 = stablehlo.shift_left %80, %82 : tensor<4194304xui32> loc(#loc25)
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<4194304xui32> loc(#loc16)
    %86 = stablehlo.or %83, %85 : tensor<4194304xui32> loc(#loc19)
    %87 = stablehlo.xor %81, %86 : tensor<4194304xui32> loc(#loc24)
    %88 = stablehlo.add %81, %87 : tensor<4194304xui32> loc(#loc22)
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %90 = stablehlo.shift_left %87, %89 : tensor<4194304xui32> loc(#loc25)
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<4194304xui32> loc(#loc16)
    %93 = stablehlo.or %90, %92 : tensor<4194304xui32> loc(#loc19)
    %94 = stablehlo.xor %88, %93 : tensor<4194304xui32> loc(#loc24)
    %95 = stablehlo.add %88, %94 : tensor<4194304xui32> loc(#loc22)
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %97 = stablehlo.shift_left %94, %96 : tensor<4194304xui32> loc(#loc25)
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<4194304xui32> loc(#loc16)
    %100 = stablehlo.or %97, %99 : tensor<4194304xui32> loc(#loc19)
    %101 = stablehlo.xor %95, %100 : tensor<4194304xui32> loc(#loc24)
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %103 = stablehlo.add %95, %102 : tensor<4194304xui32> loc(#loc22)
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %105 = stablehlo.add %101, %104 : tensor<4194304xui32> loc(#loc22)
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %107 = stablehlo.add %105, %106 : tensor<4194304xui32> loc(#loc22)
    %108 = stablehlo.add %103, %107 : tensor<4194304xui32> loc(#loc22)
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %110 = stablehlo.shift_left %107, %109 : tensor<4194304xui32> loc(#loc25)
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<4194304xui32> loc(#loc16)
    %113 = stablehlo.or %110, %112 : tensor<4194304xui32> loc(#loc19)
    %114 = stablehlo.xor %108, %113 : tensor<4194304xui32> loc(#loc24)
    %115 = stablehlo.add %108, %114 : tensor<4194304xui32> loc(#loc22)
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %117 = stablehlo.shift_left %114, %116 : tensor<4194304xui32> loc(#loc25)
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<4194304xui32> loc(#loc16)
    %120 = stablehlo.or %117, %119 : tensor<4194304xui32> loc(#loc19)
    %121 = stablehlo.xor %115, %120 : tensor<4194304xui32> loc(#loc24)
    %122 = stablehlo.add %115, %121 : tensor<4194304xui32> loc(#loc22)
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %124 = stablehlo.shift_left %121, %123 : tensor<4194304xui32> loc(#loc25)
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<4194304xui32> loc(#loc16)
    %127 = stablehlo.or %124, %126 : tensor<4194304xui32> loc(#loc19)
    %128 = stablehlo.xor %122, %127 : tensor<4194304xui32> loc(#loc24)
    %129 = stablehlo.add %122, %128 : tensor<4194304xui32> loc(#loc22)
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %131 = stablehlo.shift_left %128, %130 : tensor<4194304xui32> loc(#loc25)
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<4194304xui32> loc(#loc16)
    %134 = stablehlo.or %131, %133 : tensor<4194304xui32> loc(#loc19)
    %135 = stablehlo.xor %129, %134 : tensor<4194304xui32> loc(#loc24)
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %137 = stablehlo.add %129, %136 : tensor<4194304xui32> loc(#loc22)
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %139 = stablehlo.add %135, %138 : tensor<4194304xui32> loc(#loc22)
    %c_13 = stablehlo.constant dense<4> : tensor<ui32> loc(#loc12)
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %141 = stablehlo.add %139, %140 : tensor<4194304xui32> loc(#loc22)
    %142 = stablehlo.add %137, %141 : tensor<4194304xui32> loc(#loc22)
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %144 = stablehlo.shift_left %141, %143 : tensor<4194304xui32> loc(#loc25)
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<4194304xui32> loc(#loc16)
    %147 = stablehlo.or %144, %146 : tensor<4194304xui32> loc(#loc19)
    %148 = stablehlo.xor %142, %147 : tensor<4194304xui32> loc(#loc24)
    %149 = stablehlo.add %142, %148 : tensor<4194304xui32> loc(#loc22)
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %151 = stablehlo.shift_left %148, %150 : tensor<4194304xui32> loc(#loc25)
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<4194304xui32> loc(#loc16)
    %154 = stablehlo.or %151, %153 : tensor<4194304xui32> loc(#loc19)
    %155 = stablehlo.xor %149, %154 : tensor<4194304xui32> loc(#loc24)
    %156 = stablehlo.add %149, %155 : tensor<4194304xui32> loc(#loc22)
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %158 = stablehlo.shift_left %155, %157 : tensor<4194304xui32> loc(#loc25)
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<4194304xui32> loc(#loc16)
    %161 = stablehlo.or %158, %160 : tensor<4194304xui32> loc(#loc19)
    %162 = stablehlo.xor %156, %161 : tensor<4194304xui32> loc(#loc24)
    %163 = stablehlo.add %156, %162 : tensor<4194304xui32> loc(#loc22)
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc25)
    %165 = stablehlo.shift_left %162, %164 : tensor<4194304xui32> loc(#loc25)
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc16)
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<4194304xui32> loc(#loc16)
    %168 = stablehlo.or %165, %167 : tensor<4194304xui32> loc(#loc19)
    %169 = stablehlo.xor %163, %168 : tensor<4194304xui32> loc(#loc24)
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %171 = stablehlo.add %163, %170 : tensor<4194304xui32> loc(#loc22)
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %173 = stablehlo.add %169, %172 : tensor<4194304xui32> loc(#loc22)
    %c_14 = stablehlo.constant dense<5> : tensor<ui32> loc(#loc12)
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<4194304xui32> loc(#loc22)
    %175 = stablehlo.add %173, %174 : tensor<4194304xui32> loc(#loc22)
    return %171, %175 : tensor<4194304xui32>, tensor<4194304xui32> loc(#loc12)
  } loc(#loc12)
} loc(#loc)
#loc = loc(unknown)
#loc6 = loc("jit(_uniform)/jit(main)/convert_element_type"(#loc5))
#loc7 = loc("jit(_uniform)/jit(main)/broadcast_in_dim"(#loc5))
#loc8 = loc("jit(_uniform)/jit(main)/iota"(#loc5))
#loc9 = loc("jit(_uniform)/jit(main)/slice"(#loc5))
#loc10 = loc("jit(_uniform)/jit(main)/squeeze"(#loc5))
#loc11 = loc("jit(_uniform)/jit(main)/split"(#loc5))
#loc13 = loc("jit(_uniform)/jit(main)/concatenate"(#loc5))
#loc14 = loc("jit(_uniform)/jit(main)/random_bits"(#loc5))
#loc15 = loc("jit(_uniform)/jit(main)/mul"(#loc5))
#loc16 = loc("jit(_uniform)/jit(main)/shift_right_logical"(#loc5))
#loc17 = loc("jit(_uniform)/jit(main)/and"(#loc5))
#loc18 = loc("jit(_uniform)/jit(main)/reshape"(#loc5))
#loc19 = loc("jit(_uniform)/jit(main)/or"(#loc5))
#loc20 = loc("jit(_uniform)/jit(main)/bitcast_convert_type"(#loc5))
#loc21 = loc("jit(_uniform)/jit(main)/sub"(#loc5))
#loc22 = loc("jit(_uniform)/jit(main)/add"(#loc5))
#loc23 = loc("jit(_uniform)/jit(main)/max"(#loc5))
#loc24 = loc("jit(_uniform)/jit(main)/xor"(#loc5))
#loc25 = loc("jit(_uniform)/jit(main)/shift_left"(#loc5))
