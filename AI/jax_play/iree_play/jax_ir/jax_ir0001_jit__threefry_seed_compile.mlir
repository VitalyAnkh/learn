#loc1 = loc("seed")
module @jit__threefry_seed attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<i32> loc("seed")) -> (tensor<2xui32> {jax.result_info = ""}) {
    %c = stablehlo.constant dense<32> : tensor<i32> loc(#loc)
    %0 = stablehlo.shift_right_logical %arg0, %c : tensor<i32> loc(#loc4)
    %1 = stablehlo.convert %0 : (tensor<i32>) -> tensor<ui32> loc(#loc5)
    %2 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc6)
    %c_0 = stablehlo.constant dense<4294967295> : tensor<ui32> loc(#loc)
    %3 = stablehlo.convert %c_0 : (tensor<ui32>) -> tensor<i32> loc(#loc5)
    %4 = stablehlo.and %arg0, %3 : tensor<i32> loc(#loc7)
    %5 = stablehlo.convert %4 : (tensor<i32>) -> tensor<ui32> loc(#loc5)
    %6 = stablehlo.broadcast_in_dim %5, dims = [] : (tensor<ui32>) -> tensor<1xui32> loc(#loc6)
    %7 = stablehlo.concatenate %2, %6, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32> loc(#loc8)
    return %7 : tensor<2xui32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc = loc(unknown)
#loc2 = loc("/home/vitalyr/projects/learn/AI/jax_play/iree_play/jax_matmul_mma.py":8:6)
#loc3 = loc("<module>"(#loc2))
#loc4 = loc("jit(_threefry_seed)/jit(main)/shift_right_logical"(#loc3))
#loc5 = loc("jit(_threefry_seed)/jit(main)/convert_element_type"(#loc3))
#loc6 = loc("jit(_threefry_seed)/jit(main)/broadcast_in_dim"(#loc3))
#loc7 = loc("jit(_threefry_seed)/jit(main)/and"(#loc3))
#loc8 = loc("jit(_threefry_seed)/jit(main)/concatenate"(#loc3))
