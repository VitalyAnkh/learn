:PROPERTIES:
:ID:       20211102T153607.197808
:END:
#+title: C语言中的复杂变量声明
=int (* (*foo) (const void *))= 这样的变量声明是什么意思？

=int* (*(*foo[][])[])[]= 呢？

其实规则是简单的：

1. =*=  =()=  =[]= 是运算符，找到整个声明语句中最左侧的未声明的变量，运算符作用于它之上；
2. 优先级: =()= 和 =[]= 处于同一优先级， =*= 的优先级比 =() []= 低。
3. =*= 的作用是让右边的东西变成指向左边的东西或上一层括号外的东西的指针，所以说它是右结合的，例如 =int * p;= 声明p是指向int的指针， =int (* p)= 和 =int *p;= 相同；
4. =[]= 的作用是让左边的东西变成数组，亦即是左结合的。例如， =int *p[]= ，p先和 =[]= 结合，说明p是一个数组，左边有一个 *，说明p是一个数组，它的元素是指向int的指针；
5. =()= 的作用是让左侧的东西变成函数，亦即是左结合的；

那么读上面的声明就很简单了。
1. =int (* (*foo) (const void *))=  最里层的未声明的变量是foo，

有个辅助网站：

https://cdecl.org

#todo: 给这个类型判定方法写个parser，用[[id:20211102T154259.733314][算符优先分析]] ？
